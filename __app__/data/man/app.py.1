.\" Man page generated from reStructuredText.
.
.TH "APP.PY" "1" "Dec 24, 2018" "" "Cinnamon Tools"
.SH NAME
app.py \- CLI utility to build xlets/themes and to perform development tasks on Cinnamon Tools' repository.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH HINT
.sp
This Python application can generate a system executable with Bash completions support. See \fBapp.py generate\fP\&.
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C

app.py (\-h | \-\-help | \-\-version | \-\-manual | \-r | \-\-restart\-cinnamon)
app.py menu [\-d <domain> | \-\-domain=<domain>]
            [\-o <dir> | \-\-output=<dir>]
            [\-n | \-\-no\-confirmation]
            [\-y | \-\-dry\-run]
app.py build (\-a | \-\-all\-xlets | \-x <name> | \-\-xlet=<name>)
             [\-x <name>... | \-\-xlet=<name>...]
             [\-d <domain> | \-\-domain=<domain>]
             [\-o <dir> | \-\-output=<dir>]
             [\-n | \-\-no\-confirmation]
             [\-r | \-\-restart\-cinnamon]
             [\-y | \-\-dry\-run]
app.py build_themes [\-t <name> | \-\-theme\-name=<name>]
                    [\-o <dir> | \-\-output=<dir>]
                    [\-n | \-\-no\-confirmation]
                    [\-r | \-\-restart\-cinnamon]
                    [\-y | \-\-dry\-run]
app.py dev <sub_commands>...
app.py generate (system_executable | docs | docs_no_api | base_xlet)
                [\-f | \-\-force\-clean\-build]
                [\-u | \-\-update\-inventories]
app.py print_xlets_slugs
app.py repo (submodules | subtrees) (init | update) [\-y | \-\-dry\-run]

.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIREMENTS
.SS Xlets/Themes building requirements
.sp
No mayor requirements are needed to build xlets/themes other than Python 3.5+.
.SS Development tasks requirements
.sp
Almost all development tasks require the Cinnamon Tools\(aq repository to be \fIdeep cloned\fP to checkout all the needed sub\-modules.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
git clone \-\-recurse\-submodules \-\-shallow\-submodules git_repository_url
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fB\-\-shallow\-submodules\fP argument is to clone the sub\-modules to a depth of one commit. This is to avoid downloading a lot of unnecessary data (bootstrap 100MB+ and bootswatch 50MB+).
.SS Documentation building requirements
.INDENT 0.0
.IP \(bu 2
\fBPython 3.5+\fP
.IP \(bu 2
\fBsphinx>=1.6.5\fP: \fBsudo pip3 install sphinx\fP
.UNINDENT
.sp
\fBNote:\fP Deep cloning required.
.SS Cinnamon theme building from SASS sources
.INDENT 0.0
.IP \(bu 2
\fBPython 3.5+\fP
.IP \(bu 2
\fBsass\fP: \fI\%Download package\fP <\fBhttps://github.com/sass/dart-sass/releases\fP> and add to PATH.
.UNINDENT
.sp
\fBNote:\fP Deep cloning required.
.SS Xlets help pages building optional requirement
.INDENT 0.0
.IP \(bu 2
\fBpyuca\fP: \fBsudo pip3 install pyuca\fP
.UNINDENT
.SH DETAILED USAGE
.SS app.py manual
.sp
Display this application manual page.
.SS app.py menu
.sp
This command starts a CLI menu from which building and development tasks can be performed.
.SS Options
.INDENT 0.0
.IP \(bu 2
\fB\-d <domain>\fP or \fB\-\-domain=<domain>\fP: See \fI\%build command \-\-domain=<domain>\fP\&.
.IP \(bu 2
\fB\-o <dir>\fP or \fB\-\-output=<dir>\fP: See \fI\%build command \-\-output=<dir>\fP\&.
.IP \(bu 2
\fB\-n\fP or \fB\-\-no\-confirmation\fP: See \fI\%build command \-\-no\-confirmation\fP\&.
.IP \(bu 2
\fB\-y\fP or \fB\-\-dry\-run\fP: See \fI\%build command \-\-dry\-run\fP\&.
.UNINDENT
.SS app.py build
.sp
This command is used to build all or specifics xlets. All xlets found in Cinnamon Tools\(aq repository aren\(aqt directly usable, they need to be \fIbuilt\fP\&. \fIBuilding\fP an xlet just means that the \fIraw xlet\fP (as found in the repository) will be copied into another location (chosen when performing the building) and a string substitution will be done that will apply a generated UUID (\fBxlet_name@custom_domain_name\fP) to all files (files content and file names). It will also compile the \fBgsettings\fP files (if an xlet contains such files) and copy files common to all xlets (LICENSE.md, localizations installer script, etc.).
.SS Options
.INDENT 0.0
.IP \(bu 2
\fB\-x <name>\fP or \fB\-\-xlet=<name>\fP: Specify one or more xlets to build.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Example usage: \fBapp.py build \-x 0ArgosForCinnamon \-x 0CinnamonTweaks\fP
.IP \(bu 2
This command will build the Argos for Cinnamon applet and the Cinnamon Tweaks extension into the default output directory.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fB\-d <domain>\fP or \fB\-\-domain=<domain>\fP: To be able to build any xlet, it is necessary to specify a domain name. This domain name is then used to generate an xlet UUID (and other data). To avoid passing this command line option every time one builds xlets, a file named \fBdomain_name\fP can be created inside a folder named \fBtmp\fP at the root of the repository whose only content should be the desired domain name. This command line option has precedence over the \fBdomain_name\fP file. Which means that if this option is used, the domain name found in an existent \fBdomain_name\fP file will be ignored.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Example usage: \fBapp.py build \-x 0ArgosForCinnamon \-d example.com\fP
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
The domain name isn\(aqt internally validated (yet). But it needs to comply with certain basic rules.
.INDENT 0.0
.IP \(bu 2
It cannot be empty.
.IP \(bu 2
It must contain only ASCII characters (A\-Z[0\-9]\-.).
.IP \(bu 2
It \fBmust not\fP begin nor end with a digit.
.IP \(bu 2
It \fBmust not\fP begin nor end with a "." (period) character.
.IP \(bu 2
It must contain at least one "." (period) character.
.IP \(bu 2
It \fBmust not\fP contain consecutive "." (period) characters.
.IP \(bu 2
It \fBmust not\fP exceed 128 characters.
.UNINDENT
.sp
These rules aren\(aqt necessarily standard rules to validate a domain name. But since the domain name is used to generate from files names to GTK+ application IDs, I find it easier to comply with a set of general rules.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fB\-o <dir>\fP or \fB\-\-output=<dir>\fP: The output directory that will be used to save the built xlets. If not specified, the default storage location will be used.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Example usage: \fBapp.py build \-x 0ArgosForCinnamon \-o /home/user_name/.local/share/cinnamon\fP
.IP \(bu 2
This command will build the Argos for Cinnamon applet directly into the Cinnamon\(aqs install location for xlets.
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
By using a custom output directory when building xlets, and if an xlet was previously built into the same location, the previously built xlet will be completely removed. There will be a confirmation dialog before proceeding with the deletion, except when the \fB\-\-no\-confirmation\fP option is used.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The default storage location for all built xlets is \fB/tmp/CinnamonToolsTemp/YYYY\-MM\-DD_HH.MM.SS.MMM/xlet_type/xlet_uuid\fP\&. Successive builds will create new dated folders, so an old build can never be overwritten by a new build.
.sp
Built xlets will always be created inside a folder named as the xlet type (applets or extensions). The exception to this are the themes. Themes will be directly built into the output directory.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fB\-n\fP or \fB\-\-no\-confirmation\fP: Do not confirm the deletion of an already built xlet when the \fB\-\-output\fP option is used.
.IP \(bu 2
\fB\-r\fP or \fB\-\-restart\-cinnamon\fP: Restart Cinnamon\(aqs shell after finishing the xlets building process.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fB\-y\fP or \fB\-\-dry\-run\fP: Do not perform file system changes. Only display messages informing of the actions that will be performed or commands that will be executed.
.INDENT 2.0
.INDENT 3.5
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Some file system changes will be performed (e.g. temporary files creation).
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS app.py build_themes
.sp
This command is used to build all the themes. Just like xlets, the themes found in Cinnamon Tools\(aq repository aren\(aqt directly usable, they need to be \fIbuilt\fP\&. The themes building process is interactive. The build process will ask for Cinnamon version, Cinnamon\(aqs theme default font size/family and GTK+ 3 version.
.SS Options
.INDENT 0.0
.IP \(bu 2
\fB\-t <name>\fP or \fB\-\-theme\-name=<name>\fP: To be able to build the themes, it is necessary to specify a theme name. This theme name is then used to generate the full theme name (theme_name\-theme_variant). To avoid passing this command line option every time one builds themes, a file named \fBtheme_name\fP can be created at the root of the repository whose only content should be the desired theme name. This command line option has precedence over the \fBtheme_name\fP file. Which means that if this option is used, the theme name found in an existent \fBtheme_name\fP file will be ignored.
.IP \(bu 2
\fB\-o <dir>\fP or \fB\-\-output=<dir>\fP: The output directory that will be used to save the built themes. If not specified, the default storage location will be used. See \fI\%build command \-\-output\fP option notes for more details.
.IP \(bu 2
\fB\-n\fP or \fB\-\-no\-confirmation\fP: Do not confirm the deletion of an already built theme when the \fB\-\-output\fP option is used. See \fI\%build command \-\-output\fP option notes for more details.
.IP \(bu 2
\fB\-r\fP or \fB\-\-restart\-cinnamon\fP: Restart Cinnamon\(aqs shell after finishing the themes building process.
.IP \(bu 2
\fB\-y\fP or \fB\-\-dry\-run\fP: See \fI\%build command \-\-dry\-run\fP\&.
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
There is actually one theme in this repository, but with two variants (two different color accents). One is called \fBGreybirdBlue\fP, because it\(aqs the same blue used by the \fI\%Greybird\fP <\fBhttps://github.com/shimmerproject/Greybird\fP> theme. And the other variant is called \fBMintGreen\fP, because it uses as accent color a similar (but brighter) green color as the default Linux Mint theme called \fBMint\-X\fP\&.
.sp
The theme is basically the \fBMint\-X\fP theme with some graphics from the \fBMint\-Y\fP theme. But with added features that were removed from the previously mentioned default themes.
.UNINDENT
.UNINDENT
.SS Detailed differences with the Mint\-X theme family
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B GTK2/GTK3 themes:
.INDENT 7.0
.IP \(bu 2
Restored all removed scroll bars arrows.
.IP \(bu 2
Restored all removed outlines from focused elements.
.IP \(bu 2
Removed dashed lines feedback from scrolled views (affects GTK3 applications only).
.IP \(bu 2
Changed the tooltips appearance of the GTK2 theme to look like the GTK3 tooltips.
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Cinnamon theme:
.INDENT 7.0
.IP \(bu 2
Changed the tooltips appearance to look like the GTK3 tooltips.
.IP \(bu 2
Changed the switches appearance to look like the GTK3 switches.
.IP \(bu 2
Removed fixed sizes for entries inside menus.
.UNINDENT
.UNINDENT
.UNINDENT
.SS app.py dev
.sp
This command is used to perform development tasks.
.SS Sub\-commands
.INDENT 0.0
.IP \(bu 2
\fBgenerate_meta_file\fP: Generates a unified metadata file with the content of the metadata.json file from all xlets. It also contains extra data for all xlets to facilitate their development.
.IP \(bu 2
\fBcreate_localized_help\fP: Generates the localized \fBHELP.html\fP file for all xlets. This file is a standalone HTML file that contains detailed a description and usage instructions for each xlet. It also contains their changelogs and list of contributors/mentions.
.IP \(bu 2
\fBgenerate_trans_stats\fP: Generates a simple table with information about missing translated strings inside the PO files.
.IP \(bu 2
\fBupdate_pot_files\fP: It re\-generates all xlets POT files to reflect the changes made to the translatable strings on them.
.IP \(bu 2
\fBupdate_spanish_localizations\fP: It updates the \fBes.po\fP files from all xlets from their respective POT files.
.IP \(bu 2
\fBcreate_changelogs\fP: Generates \fIhuman readable\fP changelogs from the Git history of changes for each xlet.
.UNINDENT
.SS app.py generate
.SS Sub\-commands
.INDENT 0.0
.IP \(bu 2
\fBsystem_executable\fP: Create an executable for the \fBapp.py\fP application on the system PATH to be able to run it from anywhere.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
The system executable creation process will ask for an executable name (the default is \fBcinnamon\-tools\-cli\fP) and the absolute path to store the executable file (the default is \fB$HOME/.local/bin\fP).
.IP \(bu 2
It will also ask for bash completions creation.
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBdocs\fP: Generate this documentation page.
.IP \(bu 2
\fBdocs_no_api\fP: Generate this documentation page without extracting Python modules docstrings.
.IP \(bu 2
\fBbase_xlet\fP: Interactively generate a \fIskeleton\fP xlet.
.UNINDENT
.SS Options for \fBdocs\fP and \fBdocs_no_api\fP sub\-commands
.INDENT 0.0
.IP \(bu 2
\fB\-f\fP or \fB\-\-force\-clean\-build\fP: Clear doctree cache and destination folder when building the documentation.
.IP \(bu 2
\fB\-u\fP or \fB\-\-update\-inventories\fP: Update inventory files from their on\-line resources when building the documentation. Inventory files will be updated automatically if they don\(aqt already exist.
.UNINDENT
.SS app.py repo
.sp
Command to perform tasks in the Cinnamon Tool\(aqs Git repository. These tasks where directly intregrated into this application to avoid fatal errors (a simple error could mangle the local Git repository).
.SS Sub\-commands
.INDENT 0.0
.IP \(bu 2
\fBsubmodules\fP: Manage sub\-modules.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBinit\fP: Initialize sub\-modules. Only needed if the Cinnamon Tools\(aq repository wasn\(aqt \fIdeep cloned\fP\&.
.IP \(bu 2
\fBupdate\fP: This is needed only to merge the changes done on the upstream sub\-modules.
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
\fBsubtrees\fP: Manage repositories handled by the subtree merge strategy.
.INDENT 2.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
\fBinit\fP: Setup sub\-trees added to the Cinnamon Tools\(aq repository.
.IP \(bu 2
\fBupdate\fP: This is needed only to merge the changes done on the upstream repositories added as a sub\-trees.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SH AUTHOR
Odyseus
.SH COPYRIGHT
2016-2018, Odyseus.
.\" Generated by docutils manpage writer.
.
